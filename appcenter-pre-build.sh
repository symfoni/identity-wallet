#!/usr/bin/env bash
echo 'Start Of appcenter-pre-build.sh '

# if [ ! -n "$RN_APP_VERSION" ]
# then
#     echo "You need define the RN_APP_VERSION variable in App Center"
#     exit
# fi
# echo "Updating version name to $RN_APP_VERSION in Info.plist"
# plutil -replace CFBundleShortVersionString -string $RN_APP_VERSION "$APPCENTER_SOURCE_DIRECTORY/ios/clairvoyantsoftBlogs/Info.plist"

# Step 1 - Determining the App OS and Build Version using Environment variables
echo 'Step 1 - Determining the App OS and Build Version using Environment variables'
BUILD_OS="IOS"
if [ -z "$APPCENTER_XCODE_PROJECT" ]
then
      BUILD_OS="ANDROID"
fi

# finding the Build Version with help of Code Branch
APP_ENV="prod"

if [ "$APPCENTER_BRANCH" == 'development' ]; then
 APP_ENV="dev"
fi

echo "--> $APP_ENV"
echo 'Step 1 - Completed'

# Step 2 - Changing the APP Icons for DEV and QA Builds
echo 'Step 2 in appcenter-pre-build.sh --> Change of App Icons'

if [ "$BUILD_OS" == "IOS" ]; then
# ----- this code is only for iOS App Builds only 
if [ "$APP_ENV" == "dev" ]; then
npx react-native set-icon --platform ios --path icons/dev-icon.png
fi

if [ "$APP_ENV" == "prod" ]; then
npx react-native set-icon --platform ios --path icons/prod-icon.png
fi

fi

if [ "$BUILD_OS" == "ANDROID" ]; then

# ----- this code is only for Android App Builds only 
rm "android/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml"
rm "android/app/src/main/res/mipmap-hdpi-v26/ic_launcher.xml"
rm "android/app/src/main/res/mipmap-ldpi-v26/ic_launcher.xml"
rm "android/app/src/main/res/mipmap-mdpi-v26/ic_launcher.xml"
rm "android/app/src/main/res/mipmap-xhdpi-v26/ic_launcher.xml"
rm "android/app/src/main/res/mipmap-xxhdpi-v26/ic_launcher.xml"
rm "android/app/src/main/res/mipmap-xxxhdpi-v26/ic_launcher.xml"

if [ "$APP_ENV" == "prod" ]; then
npx react-native set-icon --platform android --path icons/prod-icon.png
fi

if [ "$APP_ENV" == "dev" ]; then
npx react-native set-icon --platform android --path icons/dev-icon.png
f

echo 'Step 2  --> Completed'
# Step 2 - Completed


if [ "$APP_ENV" != "dev" ]; then 
 # there is no need to change the file structure for DEV

SOURCE_PACKAGE_NAME="id.symfoni.dev"

if [ "$APP_ENV" == "prod" ]; then
DEST_PACKAGE_NAME="id.symfoni"
fi



# Step 3 - Change of BUCK File 
echo 'Step 3 in appcenter-pre-build.sh --> Change of BUCK File'

echo "# This file is generated by appcenter-pre-build.sh " > "android/app/BUCK_TEMP" 
 while IFS= read -r line;do
    echo "${line//$SOURCE_PACKAGE_NAME/$DEST_PACKAGE_NAME}" >> "android/app/BUCK_TEMP"
 done < "android/app/BUCK"
 rm "android/app/BUCK"
 mv "android/app/BUCK_TEMP" "android/app/BUCK"
echo 'Step 3  --> Completed'
# Step 3 - Completed

 # Step 4 - Change of build.gradle 
echo 'Step 4 in appcenter-pre-build.sh --> Change of build.gradle File'

echo "/* This file is generated by appcenter-pre-build.sh */" > "android/app/build.gradleTemp" 
 while IFS= read -r line;do
     echo "${line//$SOURCE_PACKAGE_NAME/$DEST_PACKAGE_NAME}" >> "android/app/build.gradleTemp" 
 done < "android/app/build.gradle" 
 rm "android/app/build.gradle"
 mv "android/app/build.gradleTemp" "android/app/build.gradle"
 echo 'Step 4  --> Completed'
# Step 4 - Completed

 # Step 5 - Change of AndroidManifest.xml 
echo 'Step 5 in appcenter-pre-build.sh --> Change of AndroidManifest.xml File'

 echo "<!-- This file is generated by appcenter-pre-build.sh -->" > "android/app/src/main/AndroidManifest.xmlTemp" 
 while IFS= read -r line;do
     echo "${line//$SOURCE_PACKAGE_NAME/$DEST_PACKAGE_NAME}" >> "android/app/src/main/AndroidManifest.xmlTemp" 
 done < "android/app/src/main/AndroidManifest.xml" 
 rm "android/app/src/main/AndroidManifest.xml"
 mv "android/app/src/main/AndroidManifest.xmlTemp" "android/app/src/main/AndroidManifest.xml"
 echo 'Step 5  --> Completed'
# Step 5 - Completed

# # Step 6 - Change of google-services.json files
# # google-services.json files are required for the push notifications 
# echo 'Step 6 in appcenter-pre-build.sh --> Change of google-services.json Files & App Icons'
# if [ "$APP_ENV" == "dev" ]; then

# rm "android/app/google-services.json.QA"
# rm "android/app/google-services.json"
# mv "android/app/google-services.json.PROD" "android/app/google-services.json"

# fi
# if [ "$APP_ENV" == "PROD" ]; then

# rm "android/app/google-services.json.QA"
# rm "android/app/google-services.json"
# mv "android/app/google-services.json.PROD" "android/app/google-services.json"

# fi
# if [ "$APP_ENV" == "qa" ]; then

# rm "android/app/google-services.json.PROD"
# rm "android/app/google-services.json"
# mv "android/app/google-services.json.QA" "android/app/google-services.json"

# fi

# echo 'Step 6  --> Completed'
# Step 6 - Completed

 # Step 6 - Change of Java Files 
echo 'Step 6 in appcenter-pre-build.sh --> Change of Java Files'
# for dev
if [ "$APP_ENV" == "dev" ]; then
 mkdir -m777 "android/app/src/main/java/id/symfoni/${APP_ENV}"

 echo "/* This file is generated by appcenter-pre-build.sh */" > "android/app/src/main/id/symfoni/${APP_ENV}/MainActivity.java" 
 while IFS= read -r line;do
     echo "${line//$SOURCE_PACKAGE_NAME/$DEST_PACKAGE_NAME}" >> "android/app/src/main/id/symfoni/${APP_ENV}/MainActivity.java"
 done < "android/app/src/main/id/symfoni/dev/MainActivity.java"
 echo "/* This file is generated by appcenter-pre-build.sh */" > "android/app/src/main/id/symfoni/${APP_ENV}/MainApplication.java" 
 while IFS= read -r line;do
     echo "${line//$SOURCE_PACKAGE_NAME/$DEST_PACKAGE_NAME}" >> "android/app/src/main/id/symfoni/${APP_ENV}/MainApplication.java" 
 done < "android/app/src/main/id/symfoni/dev/MainApplication.java"
fi

# for PROD
if [ "$APP_ENV" == "PROD" ]; then

echo "/* This file is generated by appcenter-pre-build.sh */" > "android/app/src/main/id/symfoni/MainActivity.java" 
 while IFS= read -r line;do
     echo "${line//$SOURCE_PACKAGE_NAME/$DEST_PACKAGE_NAME}" >> "android/app/src/main/id/symfoni/MainActivity.java"
 done < "android/app/src/main/id/symfoni/dev/MainActivity.java"

echo "/* This file is generated by appcenter-pre-build.sh */" > "android/app/src/main/id/symfoni/MainApplication.java" 
 while IFS= read -r line;do
     echo "${line//$SOURCE_PACKAGE_NAME/$DEST_PACKAGE_NAME}" >> "android/app/src/main/id/symfoni/MainApplication.java" 
 done < "android/app/src/main/id/symfoni/dev/MainApplication.java"


fi
echo 'Step 7  --> Completed'
# Step 7 - Completed

# Step 8  --> clean-up
 echo 'Step 8  --> clean-up'
 rm -r "android/app/src/main/id/symfoni/dev"
 rm "android/app/src/main/id/symfoni/dev/MainActivity.java"
 rm "android/app/src/main/id/symfoni/dev/MainApplication.java"
 echo 'Step 8  --> Completed'

 fi

 fi
 npx react-native-fix-image

 echo 'End Of appcenter-pre-build.sh '